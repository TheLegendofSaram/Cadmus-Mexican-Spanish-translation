plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    forge {
        mixinConfig "$project.mod_id-common.mixins.json"
        mixinConfig "${project.mod_id}.mixins.json"
    }
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:$minecraft_version-$forge_version"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-common:$mixinextras_version"))
    include(implementation("com.github.llamalad7.mixinextras:mixinextras-forge:$mixinextras_version"))
    modLocalRuntime("earth.terrarium.prometheus:prometheus-forge-1.20:$prometheus_version") {
        transitive = false
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    filesMatching("META-INF/mods.toml") {
        expand "version": version,
                "github_name": github_name,
                "resourcefullib_version": resourcefullib_version,
                "modrinth_id": modrinth_id
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set null
}

jar {
    archiveClassifier.set "dev"
    archivesBaseName = "$mod_id-forge-$minecraft_version"
}

sourcesJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}